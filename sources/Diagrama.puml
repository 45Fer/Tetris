@startuml Tetris

interface IPuntaje {
  +sumarPuntos(puntos: int)
}

interface IEntradaJugador {
  +leerEntrada()
}

class EstadoJuego {
  -estadoActual: string
  +iniciarJuego()
  +pausarJuego()
  +finalizarJuego()
}

class SesionJuego {
  -fechaInicio: Date
  -duracion: int
  +iniciarSesion()
  +finalizarSesion()
}

class ProximaPieza {
  -pieza: string
  +generarPieza()
}

class Timer {
  -tiempoRestante: int
  +iniciar()
  +detener()
  +reiniciar()
}

class Nivel {
  -nivelActual: int
  +subirNivel()
}

class Puntaje implements IPuntaje {
  -puntajeActual: int
  +sumarPuntos(puntos: int)
  +reiniciarPuntaje()
}

class Juego {
  -jugador: Jugador
  -tablero: Tablero
  -nivel: Nivel
  +iniciar()
  +reiniciar()
}

class Tablero {
  -celdas: Celda[][]
  +limpiarLineas()
  +agregarPieza()
}

class Celda {
  -ocupada: bool
  +ocupar()
  +liberar()
}

class InterfazUsuario {
  +mostrarMensaje(mensaje: string)
  +actualizarVista()
}

class Jugador {
  -nombre: string
  -puntaje: Puntaje
  -configuracion: Configuracion
  +actualizarPuntaje()
}

class RegistroPuntuacion {
  -historial: Puntaje[]
  +guardarPuntaje(puntaje: Puntaje)
}

class Configuracion {
  -dificultad: string
  +cambiarDificultad(nuevaDificultad: string)
}

class EntradaJugador implements IEntradaJugador {
  +leerEntrada()
}

class GestorColisiones {
  +verificarColision()
}

// Relaciones
EstadoJuego "1" o-- "1" SesionJuego
EstadoJuego "1" o-- "1" ProximaPieza
Timer "1" o-- "1" Nivel
Nivel "1" o-- "1" EstadoJuego
Nivel "1" o-- "1" Puntaje
Juego "1" *-- "1" Tablero
Juego "1" o-- "1" InterfazUsuario
Juego "1" o-- "1" Jugador
Jugador "1" *-- "1" Puntaje
RegistroPuntuacion "1" o-- "*" Puntaje
Jugador "1" o-- "1" Configuracion
Jugador "1" o-- "1" EntradaJugador
Puntaje "1" o-- "1" Timer
Tablero "1" *-- "*" Celda

@enduml
